// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  role     Role   @default(User)
  groupId  Int?
  group    Group? @relation(fields: [groupId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  files    File[]
}

model Group {
  id    Int    @id @default(autoincrement())
  name  String @unique @default("SHAKAWA")
  users User[]
  files File[]
}
model Complaint {
  id           Int         @id @default(autoincrement())
  name         String?
  email        String?     
  mobileNumber String
  type         MemberType?  // Soldier, Civil
  SID          String?      // Soldier Identifier
  MID          String?      // MemberID
  complainText String?      @db.LongText
  complainDate DateTime     
  files        File[]
  @@index([complainDate])
}
model File {
  id          Int        @id @default(autoincrement())
  path        String     @unique
  mobile      String?
  fileDate    String?
  fileType    String?
  info        String?    @default("")
  flag        Int?       @default(0)
  status      Status?    @default(ON_UNSEEN)
  groupId     Int?
  group       Group?     @relation(fields: [groupId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  userId      Int?
  user        User?      @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  complaintId Int?
  complaint   Complaint? @relation(fields: [complaintId], references: [id], onUpdate: Cascade, onDelete: SetNull)
  
}



enum Status {
  ON_SOLVE
  ON_HOLD
  ON_STUDY
  ON_UNSEEN
  
}

enum Role {
  Admin
  Manager
  User
}

enum MemberType {
  Soldier
  Civil
  Undefined
}
